version: "3.7"

services:
    nginx:
        image: nginx:alpine
        restart: always
        depends_on:
            - php
        command: >
            /bin/sh -c
            "envsubst '$$APP_BASE_URL'
            < /etc/nginx/conf.d/default.conf.template
            > /etc/nginx/conf.d/default.conf
            && nginx -g 'daemon off;'"
        ports:
            - ${DEV_HOST_PORT_HTTP}:80
            - ${DEV_HOST_PORT_HTTPS}:443
        volumes:
            # folders
            - ../..:/var/www/dev
            # files
            - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf.template:ro
        env_file:
            # docker
            - .env
            # application
            - ../../.env.local

    node:
        image: ${COMPOSE_PROJECT_NAME}_node
        build:
            context: ./
            dockerfile: services/node/Dockerfile
        restart: always
        command: tail -f /dev/null
        volumes:
            # folders
            - ../..:/usr/src/app
        working_dir: /usr/src/app
        env_file:
            # docker
            - .env
            # application
            - ../../.env.local
        user: ${DEV_UID}:${DEV_GID}

    php:
        image: ${DEV_DOCKER_IMAGE_PHP}:dev
        build:
            context: ""
            dockerfile: ../docker/dev/Dockerfile
            args:
                BASE_IMAGE: ${DEV_DOCKER_IMAGE_PHP}:base
        restart: always
        volumes:
            # folders
            - ../..:/var/www/dev
            - ${DEV_COMPOSER_DIR}:/composer
            # files
            - ./services/php/php.ini-development:/usr/local/etc/php/php.ini:ro
            - ./services/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
        working_dir: /var/www/dev
        env_file:
            # docker
            - .env
            # application
            - ../../.env.local
        user: ${DEV_UID}:${DEV_GID}
